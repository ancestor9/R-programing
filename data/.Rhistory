plot( x = Fibonacci, + main = "You specify title using the 'main' argument",
plot( x = Fibonacci, + main = "You specify title using the 'main' argument",
plot(x = Fibonacci,
main = "You specify title using the 'main' argument",
sub = "The subtitle appears here! (Use the 'sub' argument for this)",
xlab = "The x-axis label is 'xlab'",
ylab = "The y-axis label is 'ylab'"
)
plot(x = Fibonacci,
main = "You specify title using the 'main' argument",
sub = "The subtitle appears here! (Use the 'sub' argument for this)",
xlab = "The x-axis label is 'xlab'",
ylab = "The y-axis label is 'ylab'"
)
Fibonacci <- c( 1,1,2,3,5,8,13, 27 )
plot(x = Fibonacci,
main = "You specify title using the 'main' argument",
sub = "The subtitle appears here! (Use the 'sub' argument for this)",
xlab = "The x-axis label is 'xlab'",
ylab = "The y-axis label is 'ylab'"
)
10 + 20
Fibonacci <- c( 1,1,2,3,5,8,13, 27 )
plot(x = Fibonacci,
main = "You specify title using the 'main' argument",
sub = "The subtitle appears here! (Use the 'sub' argument for this)",
xlab = "The x-axis label is 'xlab'",
ylab = "The y-axis label is 'ylab'"
)
hist( x = afl.margins, breaks = 3 ) # panel b
hist( afl.margins ) # panel a
# Example data
afl.margins <- c(5, 10, 15, 8, 12, 6, 9, 13, 7, 11)
hist(x = afl.margins, breaks = 3 ) # panel b
hist(x = afl.margins, breaks = 10 ) # panel b
hist(x = afl.margins, breaks = 5 ) # panel b
hist(x = afl.margins, breaks = 3) # panel b
# Example data
afl.margins <- c(1,2,3,4,5,6,7,8,9)
hist(x = afl.margins, breaks = 3) # panel b
hist(afl.margins ) # panel a
hist(x = afl.margins, breaks = 3) # panel b
hist(x = afl.margins, breaks = 5) # panel b
hist(x = afl.margins, breaks = 5) # panel b
sum( afl.margins )
load( "aflsmall.Rdata" )
To load the R data file "aflsmall.Rdata" into your R environment, you can use the load() function. Here's the correct syntax:
load("aflsmall.Rdata")
list.files()
load("aflsmall.Rdata")
list.files()
load("aflsmall.Rdata")
load("aflsmall.Rdata")
load( "./data/aflsmall.Rdata" )
getwd()
setwd("./Rbook/data")
setwd("/Users/dan/Rbook/data")
list.files()
list.files()
list.files()
list.files()
list.files()
library(car)
install.packages("psych")
library(car)
setwd("./Rbook/data")
getwd()
head(iris)
library(MASS) # MASS패키지를 로드
head(cats)    # cats데이터프레임의 앞 줄 보기
load( "./data/aflsmall.Rdata" )
path.expand('~')
getwd()
load("C:/Users/조근하/Downloads/afl24.Rdata")
load( "aflsmall.Rdata" )
load('C:/Users/조근하/Downloads/afl24.Rdata')
list.files()
getwd()
str('afl24.Rdata')
str(afl24.Rdata)
library(lsr)
print(afl.margins)
print(afl.finalists)
print(afl24.Rdata)
afl.margins <-read.csv(“C:/Users/조근하/Downloads/afl24.csv”)
View(afl.margins)
afl.margins <-read.csv('C:/Users/조근하/Downloads/afl24.csv')
View(afl.margins)
afl.margins
print(afl.margins)
print(afl.margins)
sum( afl.margins )
sum(afl.margins)
library(MASS) # MASS패키지를 로드
library(MASS) # MASS패키지를 로드
head(cats)    # cats데이터프레임의 앞 줄 보기
install.packages("ggplot2")
> library(ggplot2)
library(ggplot2)
mpg
mpg
mpg
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point()
ggplot(mpg, aes(x = class)) + geom_bar() + coord_flip()
x <- 46:55 ; y <- c(x, 1000) ; z <- c(x, -1000)
x; mean(x)
var(mpg$model)
var(mpg$displ)
result <- chisq.test(c(23, 36, 31), p=c(1/3, 1/3, 1/3))
result
library(randomForest)
library(datasets)
library(caret)
install.packages("randomForest")
library(randomForest)
library(datasets)
library(caret)
install.packages("caret")
library(caret)
data<-iris
str(data)
data$Species <- as.factor(data$Species)
table(data$Species)
set.seed(222)
ind <- sample(2, nrow(data), replace = TRUE, prob = c(0.7, 0.3))
train <- data[ind==1,]
test <- data[ind==2,]
rf <- randomForest(Species~., data=train, proximity=TRUE) print(rf)
rf <- randomForest(Species~., data=train, proximity=TRUE)
print(rf)
p1 <- predict(rf, train)
confusionMatrix(p1, train$ Species)
confusionMatrix(p1, train$ Species)
10
True
'홍길도'
'홍길동'
'홍길동'
'홍길동'
"홍길동"
"홍길동"
"홍길동"
"홍길동"
10
10
10
TRUE
"홍길동"
"홍길동"
course
library(bizstatp)
course
install.packages("devtools")
library(bizstatp)
course
load( "aflsmall.Rdata" )
load("aflsmall.rda")
library(lsr)
who()
who()
who()
# 데이터 불러오기
load("aflsmall.rda")
load( "aflsmall.Rdata" )
# The "lsr" package (Learning Statistics with R) is designed to accompany the textbook "Learning Statistics with R" by Danielle Navarro.
# It provides a collection of functions and datasets that are useful for learning and teaching statistics using R.
library(lsr)
who()
# 데이터 출력
print(afl.margins)
print(afl.margins)
afl.margins
afl
# Mode
print( afl$away.team)
table(afl$away.team)
modeOf( x = afl$away.team )
mode(afl$away.team)
modeOf( x = afl$away.team )
maxFreq( x = afl$away.team )
maxFreq( x = afl.away.team )
$
maxFreq( x = afl$away.team )
# The "lsr" package (Learning Statistics with R) is designed to accompany the textbook "Learning Statistics with R" by Danielle Navarro.
# It provides a collection of functions and datasets that are useful for learning and teaching statistics using R.
library(lsr)
who()
maxFreq( x = afl$home.score )
modeOf( x = afl$home.score )
x <- afl$home.score
max(x)
min(x)
range(x)
# 5.2.2 Interquartile range
quantile( x = x, probs = .5)
quantile( x = x, probs = c(.25,.75) )
IQR( x = x )
# 5.2. Measures of variability
# 5.2.1 Range
a <- afl$home.score
max(a)
min(a)
quantile( x = a, probs = .75) - quantile( x = a, probs = .25)
quantile( x = a, probs = .75) - quantile( x = a, probs = .25)
quantile( x = a, probs = .75)+3*IQR( x = x )
quantile( x = a, probs = .75)+1.5*IQR( x = x )
X <- c(56, 31,56,8,32)      # enter the data
X.bar <- mean( X )          # step 1. the mean of the data
AD <- abs( X - X.bar )      # step 2. the absolute deviations from the mean
AAD <- mean( AD )           # step 3. the mean absolute deviations
print( AAD )                # print the results
aad(x)
aad(X)
# 5.2.4 Variance
( 376.36 + 31.36 + 376.36 + 817.96 + 21.16 ) / 5
mean( (X - mean(X) )^2)
var(X)
sum( (X-mean(X))^2 ) / 4
(afl$home.score - mean(afl$home.score) )^2)
(afl$home.score - mean(afl$home.score))^2
mean(afl$home.score - mean(afl$home.score))^2)
mean((afl$home.score - mean(afl$home.score))^2)
var(afl$home.score)
mean( (X - mean(X) )^2)
var(X)
(afl$home.score - mean(afl$home.score))^2
mean((afl$home.score - mean(afl$home.score))^2)
var(afl$home.score)
# 5.2.5 Standard deviation
var(afl$home.score)
# 5.2.5 Standard deviation
std(afl$home.score)
# 5.2.5 Standard deviation
sd(afl$home.score)
sd(afl$home.score)^2
hist((afl$home.score - mean(afl$home.score))^2)
hist(sqrt((afl$home.score - mean(afl$home.score))^2))
mean(afl$home.score)
mean(afl$home.score) + 2*sd(afl$home.score)
mean(afl$home.score) 2 2*sd(afl$home.score)
mean(afl$home.score) - 2*sd(afl$home.score)
hist(afl$home.score)
mean(afl$home.score) - 1.96*sd(afl$home.score)
mean(afl$home.score) + 1.96*sd(afl$home.score)
# 5.2.6 Median absolute deviation
mean( abs(afl$home.scores - mean(afl$home.score)) )
# 5.2.6 Median absolute deviation
mean( abs(afl$home.scores - mean(afl$home.score)) )
# 5.2.6 Median absolute deviation
afl$home.scores - mean(afl$home.score)
mean(afl$home.score)
mean( abs(afl$home.score - mean(afl$home.score)) )
median( abs(afl$home.score - median(afl$home.score)) )
# 5.4 Skew and kurtosis
skew(afl$home.score)
# 5.4 Skew and kurtosis
library( psych )
skew(afl$home.score)
skew(afl$away.score)
kurtosis(afl$home.score)
kurtosi(afl$home.score)
kurtosi(afl$away.score)
# 5.5 summary
summary(afl$home.score)
# 5.5 summary
summary(afl)
load( "clinicaltrial.Rdata" )
load( "clinicaltrial.rda" )
R
library(lsr)
who()
summary( object = afl.margins )
print(afl.margins)
summary(afl.margins )
summary(afl.margins$home.team )
summary(afl.margins$home.score )
afl.margins$home.score > 50
afl.margins$home.score > 100
mean(afl.margins$home.score)
afl.margins$home.score > 110
summary(afl.margins$home.score )
afl.margins$home.score > 120
summary(afl.margins$is.final )
fs_120 <- afl.margins$home.score > 120
summary(fs_120)
summary(object =fs_120)
print(afl.margins)
summary(afl.margins$venue )
summary(afl.margins$away.team)
load( "clinicaltrial.Rdata" )
getwd()
exists( "read.spss" )
library("foreign", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("foreign")
exists( "read.spss" )
detach("package:foreign", unload=TRUE)
exists( "read.spss" )
library( Matrix )
library(car)
library(psych)
library(car)
library(psych)
library(car)
install.packages("psych")
install.packages("psych")
library(car)
getwd()
install.packages("car")
getwd()
library(car)
who()
print(car)
library(lsr)
objects()
library(lsr)
who()
path.expand("~")
load( "aflsmall.Rdata" )
# Check if the file exists
if (file.exists("aflsmall.Rdata")) {
# Load the file
load("aflsmall.Rdata")
# Continue with your code using the loaded data
# ...
} else {
# File does not exist, handle the situation
print("The file 'aflsmall.Rdata' does not exist.")
# You can choose to terminate the code, display an error message, or take alternative actions.
}
load("D:\R programing\data\aflsmall.Rdata")
load('D:\R programing\data\aflsmall.Rdata')
load("D:/R programing/data/aflsmall.Rdata")
who()
load("D:/R programing/data/aflsmall.Rdata")
who()
summary(afl.margins)
blowouts <- afl.margins > 50
blowouts
summary( object = blowouts )
summary( object = afl.finalists )
f2 <- as.character( afl.finalists )
summary( object = f2 )
load( "D:/R programing/data/clinicaltrial.Rdata" )
load( "D:/R programing/R_data/clinicaltrial.Rdata" )
who(TRUE)
who()
who(TRUE)
summary( clin.trial )
describeBy( x=clin.trial, group=clin.trial$therapy )
install.packages("psych")
library(psych)
describeBy(x=clin.trial, group=clin.trial$therapy )
print(clin.trial)
print(afl.margins)
summary( object = afl.margins )
# 5.4 Getting an overall summary of a variable
library(lsr)
who()
summary(afl.margins$home.team )
summary(afl.margins$home.score )
summary(afl.margins)
blowouts <- afl.margins > 50
blowouts
summary( object = blowouts )
f2 <- as.character( afl.finalists )
summary( object = f2 )
load( "clinicaltrial.Rdata" )
load( "D:/R programing/R_data/clinicaltrial.Rdata" )
who()
describe( x = clin.trial )
# 5.5 Descriptive statistics separately for each group
describeBy( x=clin.trial, group=clin.trial$therapy )
by( data=clin.trial, INDICES=clin.trial$therapy, FUN=describe )
by( data=clin.trial, INDICES=clin.trial$therapy, FUN=summary )
aggregate( formula = mood.gain ~ drug + therapy, # mood.gain by drug/therapy combination
+ data = clin.trial, # data is in the clin.trial data frame
aggregate( formula = mood.gain ~ drug + therapy, # mood.gain by drug/therapy combination
+ data = x, # data is in the clin.trial data frame
aggregate( formula = mood.gain ~ drug + therapy, # mood.gain by drug/therapy combination
+ data = clin.trial, # data is in the clin.trial data frame
d
by( data=clin.trial, INDICES=clin.trial$therapy, FUN=describe )
by( data=clin.trial, INDICES=clin.trial$therapy, FUN=summary )
regate( formula = mood.gain ~ drug + therapy,  # mood.gain by drug/therapy combination
data = clin.trial,                     # data is in the clin.trial data frame
FUN = mean                             # print out group means
)
aggregate( formula = mood.gain ~ drug + therapy,  # mood.gain by drug/therapy combination
data = clin.trial,                     # data is in the clin.trial data frame
FUN = mean                             # print out group means
)
print(clin.trial)
ggregate( formula = mood.gain ~ drug + therapy,  # mood.gain by drug/therapy combination
data = clin.trial,                     # data is in the clin.trial data frame
FUN = mean                             # print out group means
)
aggregate( formula = mood.gain ~ drug + therapy,  # mood.gain by drug/therapy combination
data = clin.trial,                     # data is in the clin.trial data frame
FUN = mean                             # print out group means
)
aggregate( x = mood.gain ~ drug + therapy,  # mood.gain by drug/therapy combination
data = clin.trial,                     # data is in the clin.trial data frame
FUN = mean                             # print out group means
)
aggregate( mood.gain ~ drug + therapy, clin.trial, sd )
aggregate( mood.gain ~ drug + therapy,  # mood.gain by drug/therapy combination
data = clin.trial,                     # data is in the clin.trial data frame
FUN = mean                             # print out group means
)
clin.trial
clin.trial
print(afl.margins)
mena(afl.margins)
mean(afl.margins)
std(afl.margins)
sd(afl.margins)
afl.margins - mean(afl.margins)
mean(afl.margins - mean(afl.margins))
var(afl.margins - mean(afl.margins))
sc <_ (afl.margins - mean(afl.margins))/sd(afl.margins)
sc <- (afl.margins - mean(afl.margins))/sd(afl.margins)
mean(sc)
sd(sc)
host(sc)
hist(sc)
pnorm(3)
pnorm(-3)
hist(afl.margins)
hist(sc)
pnorm(0)
pnorm(1.96)
# 5.7 Correlations
load( "parenthood.Rdata" )
# 5.7 Correlations
load( "D:/R programing/R_data/parenthood.Rdata" )
who()
who(True)
who(TRUE)
parenthood
parenthood
describe( parenthood )
correlated(parenthood)
cor(parenthood)
head(parenthood)
ggplot(parenthood, aes(x=dan.sleep, y=baby.sleep)) +
geom_point()
# library
library(ggplot2)
ggplot(parenthood, aes(x=dan.sleep, y=baby.sleep)) +
geom_point()
ggplot(parenthood, aes(x=dan.sleep, y=dan.grump)) +
geom_point()
ggplot(parenthood, aes(x=dan.sleep, y=baby.sleep)) +
geom_point()
10 +20
citation()
citation
function (package = "base", lib.loc = NULL, auto = NULL)
{
dir <- system.file(package = package, lib.loc = lib.loc)
if (dir == "")
stop(gettextf("package '%s' not found", package), domain = NA)
30 -> x
x
exists( "read.spss" )
library(foreign, lib.loc = "C:/Program Files/R/R-4.3.0/library")
detach("package:foreign", unload = TRUE)
library('foreign')
exists( "read.spss" )
detach("package:foreign", unload = TRUE)
library(foreign, lib.loc = "C:/Program Files/R/R-4.3.0/library")
detach("package:foreign", unload = TRUE)
exists( "read.spss" )
library(foreign, lib.loc = "C:/Program Files/R/R-4.3.0/library")
exists( "read.spss" )
detach("package:foreign", unload = TRUE)
exists( "read.spss" )
library(foreign, lib.loc = "C:/Program Files/R/R-4.3.0/library")
detach("package:foreign", unload = TRUE)
library(foreign, lib.loc = "C:/Program Files/R/R-4.3.0/library")
detach("package:foreign", unload = TRUE)
library(foreign, lib.loc = "C:/Program Files/R/R-4.3.0/library")
detach("package:foreign", unload = TRUE)
library(foreign, lib.loc = "C:/Program Files/R/R-4.3.0/library")
detach("package:foreign", unload = TRUE)
library( Matrix )
library(car)
library(psych)
install.packages("psych")
install.packages("psych")
getwd()
list.files()
booksales <- read.csv("D:/R programing/data/data.csv")
booksales <- read.csv("D:/R programing/data/data.csv")
booksales <- read.csv("~D:/R programing/data/data.csv")
booksales <- read.csv("~D:/R programing/data/data.csv")
setwd("D:/R programing/data")
data <- read.csv("data.csv")
setwd("D:/R programing/data/")
data <- read.csv("data.csv")
dir()
booksales <- read_excel("D:/R programing/data/data.xlsx")
library(readxl)
install.packages("readxl")
library(readxl)
booksales <- read_excel("D:/R programing/data/data.xlsx")
view(booksales)
View(booksales)
library(bizstatp)
data(trees)
str(trees)
trees
